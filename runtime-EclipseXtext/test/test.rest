RestSystem
{

	requests {
		RePost {
			succAnswer id201
				
			route Route{ 
				segments{
					Segment{
						value books
					}
				} 
			}
			
			operations {
				OpCreate{
					failedAnswer fail
					struct Book
					fieldsets {
						FieldSet author{
							value author
						},
						FieldSet title{
							value title
						}
					}
				}
			}
			
			parameters{
				Parameter author,
				Parameter title
			}
		},
		
		ReGet {
			succAnswer read
				
			route Route{ 
				segments{
					Segment{
						value books
					},
					Segment{
						value ':id'
					}
				} 
			}
			
			operations {
				OpRead {
					id 'id'
					failedAnswer fail
					struct Book
					fields ("Book.author", "Book.title")	
				}
			}
		},
		
		ReDelete {
			succAnswer del
				
			route Route{ 
				segments{
					Segment{
						value books
					},
					Segment{
						value ':id'
					}
				} 
			}
			
			operations {
				OpDelete {
					id 'id'
					failedAnswer fail
					struct Book
				}
			}
		},
		
		RePut {
			succAnswer up
				
			route Route{ 
				segments{
					Segment{
						value books
					},
					Segment{
						value ':id'
					}
				} 
			}
			
			operations {
				OpUpdate {
					id 'id'
					failedAnswer fail
					struct Book
					fieldsets {
						FieldSet author{
							value author
						},
						FieldSet title{
							value title
						}
					}
				}
			}
			
			parameters{
				Parameter author,
				Parameter title
			}
		}
	}
	
	structs {
		Struct Book {
			fields {Field author, Field title}
		}
	}
	
	answers {
		
		Answer id201 {
			status 201
			return "id"
		},
		
		Answer read {
			status 200
			return '"Title: " + title + ", Author: " + author'
		},
		
		Answer fail {
			status 404
			return '"error"'
		},
		
		Answer up {
			status 200
			return '"Book with id " + id + " updated"'
		},
		
		Answer del {
			status 200
			return '"Book with id " + id + " deleted"'
		}
	} 

}