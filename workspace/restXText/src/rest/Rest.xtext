// automatically generated by Xtext
grammar rest.Rest with org.eclipse.xtext.common.Terminals

import "/metamodel/restModel.ecore" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

RestSystem returns RestSystem:
	{RestSystem}
	'RestSystem'
	'{'
		('request' '{' request+=Request ( "," request+=Request)* '}' )?
		('struct' '{' struct+=Struct ( "," struct+=Struct)* '}' )?
		('operation' '{' operation+=Operation ( "," operation+=Operation)* '}' )?
		('answer' '{' answer+=Answer ( "," answer+=Answer)* '}' )?
	'}';

Request returns Request:
	ReGet | RePost | RePut | ReDelete;


Operation returns Operation:
	OpCreate | OpRead | OpUpdate | OpDelete;




Data returns Data:
	Parameter | Attachments | Random;



Struct returns Struct:
	{Struct}
	'Struct'
	'{'
		('fields' fields=EString)?
	'}';

Answer returns Answer:
	{Answer}
	'Answer'
	'{'
		('status' status=EInt)?
		('return' return=EString)?
	'}';

Route returns Route:
	'Route'
	'{'
		'segment' '{' segment+=Segment ( "," segment+=Segment)* '}' 
	'}';

ReGet returns ReGet:
	'ReGet'
	'{'
		('ops' '(' ops+=[Operation|EString] ( "," ops+=[Operation|EString])* ')' )?
		'succAnswer' succAnswer=[Answer|EString]
		'route' route=Route
		('data' '{' data+=Data ( "," data+=Data)* '}' )?
	'}';

RePost returns RePost:
	'RePost'
	'{'
		('ops' '(' ops+=[Operation|EString] ( "," ops+=[Operation|EString])* ')' )?
		'succAnswer' succAnswer=[Answer|EString]
		'route' route=Route
		('data' '{' data+=Data ( "," data+=Data)* '}' )?
	'}';

RePut returns RePut:
	'RePut'
	'{'
		('ops' '(' ops+=[Operation|EString] ( "," ops+=[Operation|EString])* ')' )?
		'succAnswer' succAnswer=[Answer|EString]
		'route' route=Route
		('data' '{' data+=Data ( "," data+=Data)* '}' )?
	'}';

ReDelete returns ReDelete:
	'ReDelete'
	'{'
		('ops' '(' ops+=[Operation|EString] ( "," ops+=[Operation|EString])* ')' )?
		'succAnswer' succAnswer=[Answer|EString]
		'route' route=Route
		('data' '{' data+=Data ( "," data+=Data)* '}' )?
	'}';

Segment returns Segment:
	{Segment}
	'Segment'
	'{'
		('value' value=EString)?
	'}';

EString returns ecore::EString:
	STRING | ID;

Parameter returns Parameter:
	{Parameter}
	'Parameter'
	name=EString;

Attachments returns Attachments:
	{Attachments}
	'Attachments'
	name=EString;

Random returns Random:
	{Random}
	'Random'
	name=EString;

OpCreate returns OpCreate:
	'OpCreate'
	'{'
		('id' id=EString)?
		'failedAnswer' failedAnswer=[Answer|EString]
		'struct' struct=[Struct|EString]
		('fieldset' '{' fieldset+=FieldSet ( "," fieldset+=FieldSet)* '}' )?
	'}';

OpRead returns OpRead:
	'OpRead'
	'{'
		('id' id=EString)?
		'failedAnswer' failedAnswer=[Answer|EString]
		'struct' struct=[Struct|EString]
		('field' '{' field+=Field ( "," field+=Field)* '}' )?
	'}';

OpUpdate returns OpUpdate:
	'OpUpdate'
	'{'
		('id' id=EString)?
		'failedAnswer' failedAnswer=[Answer|EString]
		'struct' struct=[Struct|EString]
		('fieldset' '{' fieldset+=FieldSet ( "," fieldset+=FieldSet)* '}' )?
	'}';

OpDelete returns OpDelete:
	'OpDelete'
	'{'
		('id' id=EString)?
		'failedAnswer' failedAnswer=[Answer|EString]
		'struct' struct=[Struct|EString]
	'}';

FieldSet returns FieldSet:
	{FieldSet}
	'FieldSet'
	name=EString
	'{'
		('expr' expr=EString)?
	'}';

Field returns Field:
	{Field}
	'Field'
	name=EString;

EInt returns ecore::EInt:
	'-'? INT;
