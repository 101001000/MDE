// automatically generated by Xtext
grammar rest.Rest with org.eclipse.xtext.common.Terminals

import "metamodelREST" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

RestSystem returns RestSystem:
	{RestSystem}
	'RestSystem'
	'{'
		('request' '{' request+=Request ( "," request+=Request)* '}' )?
	'}';

Request returns Request:
	ReGet | RePost | RePut | ReDelete;



Data returns Data:
	Parameter | Attachments | Random;

Operation returns Operation:
	OpCreate | OpRead | OpUpdate | OpDelete;




Route returns Route:
	'Route'
	'{'
		'segment' '(' segment+=[Segment|EString] ( "," segment+=[Segment|EString])* ')' 
	'}';

ReGet returns ReGet:
	'ReGet'
	'{'
		'route' route=[Route|EString]
		('data' '(' data+=[Data|EString] ( "," data+=[Data|EString])* ')' )?
		('ops' '(' ops+=[Operation|EString] ( "," ops+=[Operation|EString])* ')' )?
	'}';

RePost returns RePost:
	'RePost'
	'{'
		'route' route=[Route|EString]
		('data' '(' data+=[Data|EString] ( "," data+=[Data|EString])* ')' )?
		('ops' '(' ops+=[Operation|EString] ( "," ops+=[Operation|EString])* ')' )?
	'}';

RePut returns RePut:
	'RePut'
	'{'
		'route' route=[Route|EString]
		('data' '(' data+=[Data|EString] ( "," data+=[Data|EString])* ')' )?
		('ops' '(' ops+=[Operation|EString] ( "," ops+=[Operation|EString])* ')' )?
	'}';

ReDelete returns ReDelete:
	'ReDelete'
	'{'
		'route' route=[Route|EString]
		('data' '(' data+=[Data|EString] ( "," data+=[Data|EString])* ')' )?
		('ops' '(' ops+=[Operation|EString] ( "," ops+=[Operation|EString])* ')' )?
	'}';

Segment returns Segment:
	{Segment}
	'Segment'
	;

EString returns ecore::EString:
	STRING | ID;

Parameter returns Parameter:
	{Parameter}
	'Parameter'
	name=EString;

Attachments returns Attachments:
	{Attachments}
	'Attachments'
	name=EString;

Random returns Random:
	{Random}
	'Random'
	name=EString;

Answer returns Answer:
	{Answer}
	'Answer'
	'{'
		('status' status=EInt)?
		('return' return=EString)?
	'}';

Struct returns Struct:
	{Struct}
	'Struct'
	'{'
		('fields' fields=EString)?
	'}';

OpCreate returns OpCreate:
	'OpCreate'
	'{'
		('id' id=EString)?
		('failedAnswer' failedAnswer=[Answer|EString])?
		('succAnswer' succAnswer=[Answer|EString])?
		'struct' struct=[Struct|EString]
		('fieldset' '(' fieldset+=[FieldSet|EString] ( "," fieldset+=[FieldSet|EString])* ')' )?
	'}';

OpRead returns OpRead:
	'OpRead'
	'{'
		('fields' fields=EString)?
		('id' id=EString)?
		('failedAnswer' failedAnswer=[Answer|EString])?
		('succAnswer' succAnswer=[Answer|EString])?
		'struct' struct=[Struct|EString]
	'}';

OpUpdate returns OpUpdate:
	'OpUpdate'
	'{'
		('id' id=EString)?
		('failedAnswer' failedAnswer=[Answer|EString])?
		('succAnswer' succAnswer=[Answer|EString])?
		'struct' struct=[Struct|EString]
		('fieldset' '(' fieldset+=[FieldSet|EString] ( "," fieldset+=[FieldSet|EString])* ')' )?
	'}';

OpDelete returns OpDelete:
	'OpDelete'
	'{'
		('id' id=EString)?
		('failedAnswer' failedAnswer=[Answer|EString])?
		('succAnswer' succAnswer=[Answer|EString])?
		'struct' struct=[Struct|EString]
	'}';

EInt returns ecore::EInt:
	'-'? INT;

FieldSet returns FieldSet:
	{FieldSet}
	'FieldSet'
	name=EString
	'{'
		('expr' expr=EString)?
	'}';
