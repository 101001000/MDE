[comment encoding = UTF-8 /]
[module MainFile('/metamodel/restModel.ecore')]

[import RestAcceleoProject::main::GenerateOperations /] 

[template public generateMainFile(aRestSystem : RestSystem)]

[file ('Main.java', false, 'UTF-8')]

import static spark.Spark.*;
import java.util.*;
import spark.Request;
import spark.Response;
import spark.Route;

public class Main {

	[for (struct : Struct | aRestSystem.struct)]
	private static Map<String, [struct.name/]> [struct.name.toLowerCase()/]s = new HashMap<String, [struct.name/]>();
	[/for] 

	public static void main(String['['/][']'/] args) {
		
		[for (req : Request | aRestSystem.request)]
		[generateRequests(req)/]
		[/for] 
	}
}

[/file]
[/template]

[template public generateRequests(aReq : Request)]
[if aReq.oclIsTypeOf(RePost)]post[/if][if aReq.oclIsTypeOf(ReGet)]get[/if][if aReq.oclIsTypeOf(RePut)]put[/if][if aReq.oclIsTypeOf(ReDelete)]delete[/if]([generateRoute(aReq.route)/]{

	@Override
	public Object handle(Request request, Response response){
		[for (op : Operation | aReq.operations)]
		[let structNameU : String = op.struct.name][let structNameL : String = op.struct.name.toLowerCase()][let structNameLP : String = op.struct.name.toLowerCase().concat('s')][generateOps(op)/][/let][/let][/let]
		[/for] 
	}
});
[/template]


[template public generateRoute(aRoute : Route)]
new Route("[for (seg : Segment | aRoute.segment)]/[seg.value/][/for]") 
[/template]
